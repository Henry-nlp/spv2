FROM nvidia/cuda:8.0-cudnn6-runtime

ENV LC_ALL=C.UTF-8
ENV LANG=C.UTF-8
ENV DEBIAN_FRONTEND=noninteractive

# Override Nvidia's default LD paths, since they're misconfigured in the base image.
ENV LD_LIBRARY_PATH /usr/local/cuda-8.0/lib64:$LD_LIBRARY_PATH

WORKDIR /spv2

# Install dependencies
RUN apt-get update -y && \
    apt-get install apt-utils -y && \
    apt-get upgrade -y && \
    apt-get install git python3 python3-pip python3-cffi unzip wget -y && \
    pip3 install --upgrade pip

# Install Vault
RUN wget -q https://releases.hashicorp.com/vault/0.8.3/vault_0.8.3_linux_amd64.zip && \
    unzip vault_0.8.3_linux_amd64.zip && \
    rm vault_0.8.3_linux_amd64.zip

# Install AI2 root cert
COPY ai2-ca.crt /usr/local/share/ca-certificates/ai2-ca.crt
RUN update-ca-certificates

# Install pip dependencies
COPY requirements.in .
RUN pip3 install -r requirements.in

# Copy model
COPY model/ model/

# Copy and build the stringmatch module
COPY stringmatch/ stringmatch/
RUN cd stringmatch && python3 stringmatch_builder.py && cd ..

# Copy the code itself
COPY *.py ./
COPY *.sh ./

# Install an optimized version of tensorflow
COPY tensorflow-cpu/ tensorflow-cpu/
RUN pip3 uninstall -y tensorflow && pip3 install tensorflow-cpu/tensorflow-1.3.1-cp35-cp35m-linux_x86_64.whl

EXPOSE 8081

CMD ./pyWithEnvironment.sh server.py
